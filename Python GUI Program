import requests
import tkinter as tk

# ThingSpeak channel details
CHANNEL_ID = "2617139"
API_KEY = "CQWNVV04TTB74YA1"

def send_data(input_string):
    try:
        base_url = f"https://api.thingspeak.com/update?api_key={API_KEY}"
        url = f"{base_url}&field1={input_string}"
        response = requests.get(url)
        if response.status_code == 200:
            status_label.config(text="Data sent successfully!")
        else:
            status_label.config(text="Error sending data.")
    except Exception as e:
        status_label.config(text=f"An error occurred: {str(e)}")

def on_submit():
    try:
        input_string = single_field_entry.get()
        input_values = input_string.split(',')
        if len(input_values) < 2:
            status_label.config(text="Please enter at least one value and the count.")
            return
        num_of_elements = int(input_values[-1]) 
        if num_of_elements > len(input_values) - 1:
            status_label.config(text="Number of elements exceeds provided values.")
            return
        values_to_send = ','.join(input_values[:-1][:num_of_elements])  
        send_data(values_to_send)
    except ValueError:
        status_label.config(text="Please enter valid numbers.")

def reset_data():
    try:
        base_url = f"https://api.thingspeak.com/update?api_key={API_KEY}"
        url = f"{base_url}&field1=0"
        response = requests.get(url)
        if response.status_code == 200:
            status_label.config(text="Data reset successfully!")
        else:
            status_label.config(text="Error resetting data.")
    except Exception as e:
        status_label.config(text=f"An error occurred: {str(e)}")

def trigger_panic():
    """Function to trigger panic mode on ThingSpeak."""
    send_data('panic')  # Send a unique value to trigger the buzzer for 10-15 seconds.
root = tk.Tk()
root.title("ThingSpeak Data Entry")
single_field_label = tk.Label(root, text="Field Values (e.g., 3.00,9.00,2):")
single_field_label.grid(row=0, column=0, padx=10, pady=10)
single_field_entry = tk.Entry(root)
single_field_entry.grid(row=0, column=1, padx=10, pady=10)
submit_button = tk.Button(root, text="Submit", command=on_submit)
submit_button.grid(row=1, column=0, columnspan=2, padx=10, pady=10)
reset_button = tk.Button(root, text="Reset Data", command=reset_data)
reset_button.grid(row=2, column=0, columnspan=2, padx=10, pady=10)
status_label = tk.Label(root, text="")
status_label.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

root.mainloop()

